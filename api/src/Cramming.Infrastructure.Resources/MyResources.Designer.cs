//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cramming.Infrastructure.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class MyResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MyResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cramming.Infrastructure.Resources.MyResources", typeof(MyResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - For each question:.
        /// </summary>
        public static string PromptForEachQuestion {
            get {
                return ResourceManager.GetString("PromptForEachQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - For each option:.
        /// </summary>
        public static string PromptForEachQuestionOption {
            get {
                return ResourceManager.GetString("PromptForEachQuestionOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Answer ({0}): Enter the answer for the question (string format). For multiple-choice questions, leave it blank (null)..
        /// </summary>
        public static string PromptQuestionAnswer {
            get {
                return ResourceManager.GetString("PromptQuestionAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Is answer? ({0}): Indicate if this is the correct answer (true / false)..
        /// </summary>
        public static string PromptQuestionOptionIsAnswer {
            get {
                return ResourceManager.GetString("PromptQuestionOptionIsAnswer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Options ({0}, only for multiple-choice questions):.
        /// </summary>
        public static string PromptQuestionOptions {
            get {
                return ResourceManager.GetString("PromptQuestionOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Statement ({0}): Enter the statement of the option (string format)..
        /// </summary>
        public static string PromptQuestionOptionStatement {
            get {
                return ResourceManager.GetString("PromptQuestionOptionStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2. List of Questions ({0}):.
        /// </summary>
        public static string PromptQuestions {
            get {
                return ResourceManager.GetString("PromptQuestions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Statement ({0}): Enter the statement of the question (string format)..
        /// </summary>
        public static string PromptQuestionStatement {
            get {
                return ResourceManager.GetString("PromptQuestionStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Type ({0}): Specify the type of the question, which can be &quot;OpenEnded&quot; or &quot;MultipleChoice&quot;..
        /// </summary>
        public static string PromptQuestionType {
            get {
                return ResourceManager.GetString("PromptQuestionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1. Topic ID ({0}): Enter the ID of the topic to which the questions are related (UUID format).
        /// </summary>
        public static string PromptTopicId {
            get {
                return ResourceManager.GetString("PromptTopicId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1. ID do Tópico (topicId): Insira o ID do tópico ao qual as questões estão relacionadas (formato UUID).
        ///
        ///2. Lista de Questões (questions):
        ///   - Para cada questão:
        ///     - Tipo (type): Indique o tipo da questão, que pode ser  &quot;&quot;OpenEnded&quot;&quot; ou &quot;&quot;MultipleChoice&quot;&quot;.
        ///     - Declaração (statement): Insira a declaração da questão (formato string).
        ///     - Resposta (answer): Insira a resposta para a questão (formato string). Para questões de múltipla escolha, deixe em branco (null).
        ///     - Escolhas (choices, ap [rest of string was truncated]&quot;;.
        /// </summary>
        public static string QuestionGenerationPrompt {
            get {
                return ResourceManager.GetString("QuestionGenerationPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string TopicName {
            get {
                return ResourceManager.GetString("TopicName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown question type: {0}.
        /// </summary>
        public static string UnknownQuestionType {
            get {
                return ResourceManager.GetString("UnknownQuestionType", resourceCulture);
            }
        }
    }
}
